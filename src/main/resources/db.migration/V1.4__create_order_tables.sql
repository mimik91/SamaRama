CREATE TABLE transport_orders (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    bicycle_id BIGINT NOT NULL,
    client_id BIGINT NOT NULL,
    pickup_date DATE NOT NULL,
    pickup_address VARCHAR(255) NOT NULL,
    pickup_latitude DECIMAL(10,8),
    pickup_longitude DECIMAL(11,8),
    pickup_time_from TIME,
    pickup_time_to TIME,
    delivery_address VARCHAR(255) NOT NULL,
    delivery_latitude DECIMAL(10,8),
    delivery_longitude DECIMAL(11,8),
    target_service_id BIGINT NOT NULL,
    status VARCHAR(20) NOT NULL DEFAULT 'PENDING',
    order_date TIMESTAMP NOT NULL DEFAULT NOW(),
    transport_price DECIMAL(10,2) NOT NULL,
    estimated_time INTEGER,
    actual_pickup_time TIMESTAMP,
    actual_delivery_time TIMESTAMP,
    transport_notes VARCHAR(500),
    additional_notes VARCHAR(500),
    last_modified_by VARCHAR(100),
    last_modified_date TIMESTAMP,
    PRIMARY KEY (id),
    FOREIGN KEY (bicycle_id) REFERENCES incomplete_bikes(id),
    FOREIGN KEY (client_id) REFERENCES incomplete_users(id),
    FOREIGN KEY (target_service_id) REFERENCES bike_services(id)
);

CREATE TABLE service_orders (
    id BIGINT NOT NULL,
    service_package_id BIGINT,
    service_package_code VARCHAR(20),
    service_price DECIMAL(10,2),
    service_notes VARCHAR(500),
    service_start_date TIMESTAMP,
    service_completion_date TIMESTAMP,
    PRIMARY KEY (id),
    FOREIGN KEY (id) REFERENCES transport_orders(id) ON DELETE CASCADE,
    FOREIGN KEY (service_package_id) REFERENCES service_packages(id)
);

CREATE TABLE service_records (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    bicycle_id BIGINT NOT NULL,
    name VARCHAR(50) NOT NULL,
    description TEXT NOT NULL,
    service_date DATE NOT NULL,
    price DECIMAL(10, 2),
    PRIMARY KEY (id),
    FOREIGN KEY (bicycle_id) REFERENCES bicycles(id)
);

ALTER TABLE transport_orders
    ADD CONSTRAINT chk_transport_order_status
    CHECK (status IN ('PENDING', 'CONFIRMED', 'PICKED_UP', 'IN_SERVICE', 'ON_THE_WAY_BACK', 'CANCELLED'));